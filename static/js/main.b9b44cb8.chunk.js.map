{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMoviesList","moviesList","useState","setTitle","setMovie","isLoading","setIsLoading","isAnyError","setError","isSearchBefore","setIsSearchBefore","handleFormSubmit","event","a","preventDefault","query","fetch","then","res","json","catch","Response","Error","data","Title","Plot","Poster","imdbID","onSubmit","htmlFor","type","id","placeholder","value","onChange","e","target","classNames","disabled","onClick","find","obj","current","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9b44cb8.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { FormEvent, useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\n\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  setMoviesList: React.Dispatch<React.SetStateAction<Movie[]>>;\n  moviesList: Movie[];\n};\n\nexport const FindMovie: React.FC<Props> = ({ setMoviesList, moviesList }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isAnyError, setError] = useState(false);\n  const [isSearchBefore, setIsSearchBefore] = useState(false);\n  // const [existingImdbId, setExistingImdbId] = useState<string[] | []>([]);\n\n  const defPicUrl = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n  const handleFormSubmit = async (event: FormEvent) => {\n    event.preventDefault();\n    setIsSearchBefore(true);\n    setIsLoading(true);\n\n    try {\n      await getMovie(title)\n        .then(data => {\n          if ('Error' in data) {\n            throw Error(data.Error);\n          } else {\n            setMovie({\n              title: data.Title,\n              description: data.Plot,\n              imgUrl: data.Poster === 'N/A' ? defPicUrl : data.Poster,\n              imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n              imdbId: data.imdbID,\n            });\n          }\n        });\n    } catch (errorName) {\n      setError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleAddButton = () => {\n    if (movie) {\n      if (!moviesList.find(obj => obj.imdbId === movie.imdbId)) {\n        setMoviesList(current => [...current, movie]);\n      }\n\n      setIsSearchBefore(false);\n      setTitle('');\n      setMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={title}\n              onChange={(e) => {\n                setTitle(e.target.value);\n                setError(false);\n              }}\n            />\n          </div>\n\n          {isAnyError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!title}\n            >\n              {isSearchBefore ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {isSearchBefore && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddButton}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=b346ce8d';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [moviesList, setMoviesList] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n\n      <div className=\"page-content\">\n        <MoviesList movies={moviesList} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          setMoviesList={setMoviesList}\n          moviesList={moviesList}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}